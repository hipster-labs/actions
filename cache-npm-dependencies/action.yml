#
# Copyright 2013-2023 the original author or authors from the JHipster project.
#
# This file is part of the JHipster project, see https://www.jhipster.tech/
# for more information.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Cache npm dependencies
description: Cache npm dependencies
inputs:
  generator-path:
    description: Generator folder relative to workspace.
    required: true
  generator-jhipster-path:
    description: JHipster generator folder relative to workspace.
    required: false
runs:
  using: composite
  steps:
    - run: echo "install-path=$(npx --no jhipster --install-path)" >> $GITHUB_OUTPUT
      if: inputs.generator-jhipster-path == null
      id: npx-install-path
      shell: bash
      working-directory: ${{ github.workspace }}/${{ inputs.generator-path }}
    - run: echo "install-path=${{ steps.npx-install-path.outputs.install-path || format('{0}/{1}', github.workspace, inputs.generator-jhipster-path) }}" >> $GITHUB_OUTPUT
      id: install-path
      shell: bash
      working-directory: ${{ github.workspace }}/${{ inputs.generator-path }}
    - name: Cache node_modules
      run: npm install
      shell: bash
      if: always()
      working-directory: ${{ github.workspace }}/${{ inputs.generator-path }}
    - name: Cache last released generator-jhipster
      run: |
        npm install -g generator-jhipster@latest
        npm uninstall -g generator-jhipster
      shell: bash
      if: always()
    - run: rm -rf tmp; mkdir tmp
      shell: bash
      working-directory: ${{ github.workspace }}
    - name: Cache common node_modules
      run: |
        cp "${{ steps.install-path.outputs.install-path }}/generators/common/resources/package.json" .
        npm install --force
      shell: bash
      if: always()
      working-directory: ${{ github.workspace }}/tmp
    - name: Cache npm dependencies
      run: |
        find "${{ steps.install-path.outputs.install-path }}" -name "package.json" -print0 | while read -d $'\0' file
        do
          mkdir tmp
          echo "caching $file"
          cp "$file" .
          npm install --force
          cd ..
          rm -rf tmp
        done
      shell: bash
      if: always()
      working-directory: ${{ github.workspace }}
